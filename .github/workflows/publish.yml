name: Publish Release

on:
  workflow_dispatch:
  push:
    tags:
     - '*'


jobs:
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@master

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install pypa/setuptools
      run: >-
        python -m pip install wheel build

    - name: Extract tag name
      id: tag
      run: echo ::set-output name=TAG_NAME::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: Update version in pyproject.toml
      run: >-
        sed -i "s/{{VERSION_PLACEHOLDER}}/${{ steps.tag.outputs.TAG_NAME }}/g" pyproject.toml

    - name: Build a binary wheel
      run: >-
        python -m build

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
          draft: false
          prerelease: false
          release_name: ${{ steps.tag.outputs.TAG_NAME }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
      env:
          GITHUB_TOKEN: ${{ github.token }}

    - name: upload sources zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ethpwn-${{ steps.tag.outputs.TAG_NAME }}.tar.gz
        asset_name: ethpwn-${{ steps.tag.outputs.TAG_NAME }}.tar.gz
        asset_content_type: application/gzip

    - name: upload wheel
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/ethpwn-${{ steps.tag.outputs.TAG_NAME }}-py3-none-any.whl
        asset_name: ethpwn-${{ steps.tag.outputs.TAG_NAME }}-py3-none-any.whl
        asset_content_type: application/zip